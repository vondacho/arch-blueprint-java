{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"arch blueprint java \u00b6 Getting started \u00b6 To build the project with ./gradlew clean build . To launch the application with ./gradlew bootRun --args='--spring.profiles.active=test,jpa' . To play use cases with Postman using the default collection . Release \u00b6 To release the application using GitHub release panel.","title":"Home"},{"location":"#arch-blueprint-java","text":"","title":"arch blueprint java"},{"location":"#getting-started","text":"To build the project with ./gradlew clean build . To launch the application with ./gradlew bootRun --args='--spring.profiles.active=test,jpa' . To play use cases with Postman using the default collection .","title":"Getting started"},{"location":"#release","text":"To release the application using GitHub release panel.","title":"Release"},{"location":"architecture/","text":"Architecture \u00b6 C4 \u00b6 System context Container view Component view AppMap \u00b6 From your local machine \u00b6 To start the AppMap viewer web application on local port 3000 with docker run -it -p 3000:8080 ghcr.io/vondacho/appmap-viewer:latest . To visualize the behaviour of main use cases from the browser at http://localhost:3000/appmap/appmap.html?appmap=<url_to_your_AppMap_file> . E2E from API layer E2E from Service layer E2E from Data layer Local AppMap file \u00b6 To start the AppMap viewer web application on local port 3000 with docker run -it -p 3000:8080 -v $(pwd):/usr/appmap-viewer/maps ghcr.io/vondacho/appmap-viewer:latest . To visualize your local AppMap file from the browser at http://localhost:3000/appmap/appmap.html?appmap=/maps/<your_AppMap_file> . From your IDE \u00b6 To install the AppMap extension in your IDE. To build the app maps with ./gradlew appmap test . To visualize the app maps using the AppMap extension inside your IDE. Hexagonal \u00b6 The logical layers are organized like an onion with the domain layer at the center. Infrastructure layer adapts the output ports exposed by the application and domain layers. Web layer consumes input ports exposed by the application layer. Application layer acts as a use case orchestrator and consumes input ports exposed by the domain layer. Models are segregated and mapped between the different layers. ACL is used to protect the internal ubiquitous language from external languages. Domain model \u00b6 Data model \u00b6 CI/CD \u00b6 Github actions","title":"Architecture"},{"location":"architecture/#architecture","text":"","title":"Architecture"},{"location":"architecture/#c4","text":"System context Container view Component view","title":"C4"},{"location":"architecture/#appmap","text":"","title":"AppMap"},{"location":"architecture/#from-your-local-machine","text":"To start the AppMap viewer web application on local port 3000 with docker run -it -p 3000:8080 ghcr.io/vondacho/appmap-viewer:latest . To visualize the behaviour of main use cases from the browser at http://localhost:3000/appmap/appmap.html?appmap=<url_to_your_AppMap_file> . E2E from API layer E2E from Service layer E2E from Data layer","title":"From your local machine"},{"location":"architecture/#local-appmap-file","text":"To start the AppMap viewer web application on local port 3000 with docker run -it -p 3000:8080 -v $(pwd):/usr/appmap-viewer/maps ghcr.io/vondacho/appmap-viewer:latest . To visualize your local AppMap file from the browser at http://localhost:3000/appmap/appmap.html?appmap=/maps/<your_AppMap_file> .","title":"Local AppMap file"},{"location":"architecture/#from-your-ide","text":"To install the AppMap extension in your IDE. To build the app maps with ./gradlew appmap test . To visualize the app maps using the AppMap extension inside your IDE.","title":"From your IDE"},{"location":"architecture/#hexagonal","text":"The logical layers are organized like an onion with the domain layer at the center. Infrastructure layer adapts the output ports exposed by the application and domain layers. Web layer consumes input ports exposed by the application layer. Application layer acts as a use case orchestrator and consumes input ports exposed by the domain layer. Models are segregated and mapped between the different layers. ACL is used to protect the internal ubiquitous language from external languages.","title":"Hexagonal"},{"location":"architecture/#domain-model","text":"","title":"Domain model"},{"location":"architecture/#data-model","text":"","title":"Data model"},{"location":"architecture/#cicd","text":"Github actions","title":"CI/CD"},{"location":"testing/","text":"Testing \u00b6 Getting started \u00b6 To launch the whole tests suite with ./gradlew clean check . Unit and integration testing \u00b6 To launch the unit and integration tests with ./gradlew test . Acceptance testing \u00b6 To launch the acceptance tests with ./gradlew acceptanceTest . Contract testing \u00b6 To launch the contract tests with ./gradlew contractTest . Architecture testing \u00b6 To launch the architecture tests with ./gradlew archTest . Reporting \u00b6 Cucumber Acceptance test Contract tests Unit and integration tests Architecture tests","title":"Testing"},{"location":"testing/#testing","text":"","title":"Testing"},{"location":"testing/#getting-started","text":"To launch the whole tests suite with ./gradlew clean check .","title":"Getting started"},{"location":"testing/#unit-and-integration-testing","text":"To launch the unit and integration tests with ./gradlew test .","title":"Unit and integration testing"},{"location":"testing/#acceptance-testing","text":"To launch the acceptance tests with ./gradlew acceptanceTest .","title":"Acceptance testing"},{"location":"testing/#contract-testing","text":"To launch the contract tests with ./gradlew contractTest .","title":"Contract testing"},{"location":"testing/#architecture-testing","text":"To launch the architecture tests with ./gradlew archTest .","title":"Architecture testing"},{"location":"testing/#reporting","text":"Cucumber Acceptance test Contract tests Unit and integration tests Architecture tests","title":"Reporting"}]}